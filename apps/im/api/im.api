syntax = "v1"

info (
	title:  "IM message service"
	author: "peter6866"
)

// ------- domain.api --------------------
type (
	ChatLog {
		Id             string `json:"id,omitempty"`
		ConversationId string `json:"conversationId,omitempty"`
		SendId         string `json:"sendId,omitempty"`
		RecvId         string `json:"recvId,omitempty"`
		MsgType        int32  `json:"msgType,omitempty"`
		MsgContent     string `json:"msgContent,omitempty"`
		ChatType       int32  `json:"chatType,omitempty"`
		SendTime       int64  `json:"SendTime,omitempty"`
	}
	Conversation {
		ConversationId string `json:"conversationId,omitempty"`
		ChatType       int32  `json:"ChatType,omitempty"`
		TargetId       string `json:"targetId,omitempty"`
		IsShow         bool   `json:"isShow,omitempty"`
		Seq            int64  `json:"seq,omitempty"`
		Read           int32  `json:"read,omitempty"`
		Total          int32  `json:"total,omitempty"`
		Unread         int32  `json:"unread,omitempty"`
	}
)

// -------------- im api v1 --------------
type (
	ChatLogReq {
		ConversationId string `json:"conversationId"`
		StartSendTime  int64  `json:"startSendTime,omitempty"`
		EndSendTime    int64  `json:"endSendTime,omitempty"`
		Count          int64  `json:"count,omitempty"`
	}
	ChatLogResp {
		List []*ChatLog `json:"list"`
	}
	GetConversationsReq  {}
	GetConversationsResp {
		UserId           string                   `json:"userId"`
		ConversationList map[string]*Conversation `json:"conversationList"`
	}
	PutConversationsReq {
		ConversationList map[string]*Conversation `json:"conversationList"`
	}
	PutConversationsResp  {}
	SetUpUserConversationReq {
		SendId   string `json:"sendId,omitempty"`
		RecvId   string `json:"recvId,omitempty"`
		ChatType int32  `json:"ChatType,omitempty"`
	}
	setUpUserConversationResp  {}
	GetChatLogReadRecordsReq {
		MsgId string `json:"msgId"`
	}
	GetChatLogReadRecordsResp {
		Reads   []string `json:"reads"`
		UnReads []string `json:"unReads"`
	}
)

@server (
	prefix: v1/im
	jwt:    JwtAuth
)
service im {
	@doc "Get chat log by user"
	@handler getChatLog
	get /chatlog (ChatLogReq) returns (ChatLogResp)

	@doc "Set up conversation"
	@handler setUpUserConversation
	post /setup/conversation (SetUpUserConversationReq) returns (setUpUserConversationResp)

	@doc "Get conversation"
	@handler getConversations
	get /conversation (GetConversationsReq) returns (GetConversationsResp)

	@doc "Update conversation"
	@handler putConversations
	put /conversation (PutConversationsReq) returns (PutConversationsResp)

	@doc "Get chat log read records"
	@handler getChatLogReadRecords
	get /chatlog/readRecords (GetChatLogReadRecordsReq) returns (GetChatLogReadRecordsResp)
}

